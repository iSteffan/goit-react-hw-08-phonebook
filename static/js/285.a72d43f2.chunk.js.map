{"version":3,"file":"static/js/285.a72d43f2.chunk.js","mappings":"4MAUMA,EAAaC,EAAAA,KAAaC,MAAM,CACpCC,KAAMF,EAAAA,KAAaG,SAAS,qBAwD9B,UApDiB,WACf,IAAMC,GAAWC,EAAAA,EAAAA,MAMjB,OACE,SAAC,KAAD,CACEC,cAAe,CACbJ,KAAM,GACNK,MAAO,GACPC,SAAU,IAEZC,iBAAkBV,EAClBW,SAAU,SAACC,EAAQC,GACjBC,QAAQC,IAAIH,GACZP,GACEW,EAAAA,EAAAA,IAAS,CACPb,KAAMS,EAAOT,KACbK,MAAOI,EAAOJ,MACdC,SAAUG,EAAOH,YAGrBI,EAAQI,WACT,EAjBH,UAmBE,UAAC,KAAD,YACE,UAAC,KAAD,uBAEE,mBACA,SAAC,KAAD,CAAOd,KAAK,UACZ,SAAC,KAAD,CAAcA,KAAK,OAAOe,UAAU,YAEtC,UAAC,KAAD,oBAEE,mBACA,SAAC,KAAD,CAAOC,KAAK,QAAQhB,KAAK,WACzB,SAAC,KAAD,CAAcA,KAAK,QAAQe,UAAU,YAEvC,UAAC,KAAD,uBAEE,mBACA,SAAC,KAAD,CAAOf,KAAK,cACZ,SAAC,KAAD,CAAcA,KAAK,WAAWe,UAAU,YAE1C,SAAC,KAAD,CAAKC,KAAK,SAAV,0BAIP,C,uPC1DYC,GAAeC,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAH,gGAOZE,GAAoBF,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAH,gGAOjBG,GAAuBH,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAH,iGAOpBI,GAAOJ,EAAAA,EAAAA,IAAOK,EAAAA,GAAPL,CAAH,2YAsBJM,EAAQN,EAAAA,GAAAA,MAAH,6DAKLO,GAAQP,EAAAA,EAAAA,IAAOQ,EAAAA,GAAPR,CAAH,4MAWLS,EAAMT,EAAAA,GAAAA,OAAH,sO","sources":["pages/Register.jsx","pages/Register.styled.js"],"sourcesContent":["import { Form, Label, Btn, Field, ErrorMessage } from './Register.styled';\nimport { register } from '../redux/auth/authOperations';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { useDispatch } from 'react-redux';\n// import { useNavigate } from 'react-router-dom';\n// import { selectIsLoggedIn } from 'redux/auth/authSlice';\n// import { Input, InputGroup, InputRightElement, Button } from '@chakra-ui/react';\n// import { useState } from 'react';\n\nconst FormSchema = Yup.object().shape({\n  name: Yup.string().required('Required field!'),\n  //   password: Yup.number().positive('Must be > 0!').required('Required field!'),\n});\n\nconst Register = () => {\n  const dispatch = useDispatch();\n  // const navigate = useNavigate();\n  // const isLoggedIn = useSelector(selectIsLoggedIn);\n  // const [show, setShow] = useState(false);\n  // const handleClick = () => setShow(!show);\n\n  return (\n    <Formik\n      initialValues={{\n        name: '',\n        email: '',\n        password: '',\n      }}\n      validationSchema={FormSchema}\n      onSubmit={(values, actions) => {\n        console.log(values);\n        dispatch(\n          register({\n            name: values.name,\n            email: values.email,\n            password: values.password,\n          })\n        );\n        actions.resetForm();\n      }}\n    >\n      <Form>\n        <Label>\n          Username\n          <br />\n          <Field name=\"name\" />\n          <ErrorMessage name=\"name\" component=\"div\" />\n        </Label>\n        <Label>\n          Email\n          <br />\n          <Field type=\"email\" name=\"email\" />\n          <ErrorMessage name=\"email\" component=\"div\" />\n        </Label>\n        <Label>\n          Password\n          <br />\n          <Field name=\"password\" />\n          <ErrorMessage name=\"password\" component=\"div\" />\n        </Label>\n        <Btn type=\"submit\">Register</Btn>\n      </Form>\n    </Formik>\n  );\n};\n\nexport default Register;\n","import styled from 'styled-components';\nimport {\n  Form as FormikForm,\n  Field as FormikInput,\n  ErrorMessage as FormikErrorMessage,\n} from 'formik';\n\nexport const ErrorMessage = styled(FormikErrorMessage)`\n  position: absolute;\n  top: 90px;\n  font-size: 14px;\n  color: red;\n`;\n\nexport const ErrorMessageEmail = styled(FormikErrorMessage)`\n  position: absolute;\n  top: 90px;\n  font-size: 14px;\n  color: red;\n`;\n\nexport const ErrorMessagePassword = styled(FormikErrorMessage)`\n  position: absolute;\n  top: 184px;\n  font-size: 14px;\n  color: red;\n`;\n\nexport const Form = styled(FormikForm)`\n  position: relative;\n  margin-top: 100px;\n  margin-left: auto;\n  margin-right: auto;\n\n  box-sizing: border-box;\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n  padding: 20px 40px;\n\n  background-color: white;\n  border: 1px solid gray;\n  border-radius: 12px;\n  min-width: 320px;\n\n  @media screen and (min-width: 480px) {\n    width: 400px;\n  }\n`;\n\nexport const Label = styled.label`\n  font-size: 26px;\n  color: white;\n`;\n\nexport const Field = styled(FormikInput)`\n  box-sizing: border-box;\n  /* margin-top: 10px; */\n  padding: 5px 20px;\n  font-size: 20px;\n  line-height: 1.5;\n  width: 100%;\n  /* height: 40px; */\n  border-radius: 12px;\n`;\n\nexport const Btn = styled.button`\n  display: inline-block;\n  padding: 10px 20px;\n  margin-left: auto;\n  margin-right: auto;\n  margin-top: 10px;\n\n  width: 150px;\n  font-size: 18px;\n  background-color: yellow;\n  border-radius: 12px;\n`;\n"],"names":["FormSchema","Yup","shape","name","required","dispatch","useDispatch","initialValues","email","password","validationSchema","onSubmit","values","actions","console","log","register","resetForm","component","type","ErrorMessage","styled","FormikErrorMessage","ErrorMessageEmail","ErrorMessagePassword","Form","FormikForm","Label","Field","FormikInput","Btn"],"sourceRoot":""}