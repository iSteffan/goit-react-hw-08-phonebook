{"version":3,"file":"static/js/831.b757a319.chunk.js","mappings":"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","sources":["components/ContactForm/ContactForm.styled.js","components/ContactForm/ContactForm.jsx","components/ContactList/ContactList.styled.js","components/ContactList/ContactList.jsx","components/Filter/Filter.styled.js","components/Filter/Filter.jsx","components/App.styled.js","components/Loader/Loader.jsx","pages/Contacts.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport {\n  Form as FormikForm,\n  Field as FormikInput,\n  ErrorMessage as FormikErrorMessage,\n} from 'formik';\n\nexport const ErrorMessage = styled(FormikErrorMessage)`\n  font-size: 14px;\n`;\n\nexport const Form = styled(FormikForm)`\n  width: 100%;\n  box-sizing: border-box;\n  display: inline-flex;\n  flex-direction: column;\n  gap: 10px;\n  padding: 20px 40px;\n\n  background-color: #039be5;\n  border: 1px solid gray;\n  border-radius: 12px;\n`;\n\nexport const Label = styled.label`\n  font-size: 26px;\n  color: white;\n`;\n\nexport const Field = styled(FormikInput)`\n  box-sizing: border-box;\n  margin-top: 10px;\n  padding: 5px 20px;\n  font-size: 20px;\n  line-height: 1.5;\n  width: 100%;\n  /* height: 40px; */\n  border-radius: 12px;\n`;\n\nexport const Btn = styled.button`\n  display: inline-block;\n  padding: 10px 20px;\n  margin-left: auto;\n  margin-right: auto;\n  margin-top: 10px;\n\n  width: 150px;\n  font-size: 18px;\n  background-color: yellow;\n  border-radius: 12px;\n`;\n","import { Form, Label, Btn, Field, ErrorMessage } from './ContactForm.styled';\nimport PropTypes from 'prop-types';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { nanoid } from 'nanoid';\n\nconst FormSchema = Yup.object().shape({\n  name: Yup.string().required('Required field!'),\n  phone: Yup.number().positive('Must be > 0!').required('Required field!'),\n});\n\nexport const ContactForm = ({ onSave }) => {\n  return (\n    <Formik\n      initialValues={{\n        name: '',\n        phone: '',\n      }}\n      validationSchema={FormSchema}\n      onSubmit={(values, actions) => {\n        onSave({ ...values, id: nanoid() });\n        actions.resetForm();\n      }}\n    >\n      <Form>\n        <Label>\n          Name\n          <br />\n          <Field name=\"name\" />\n          <ErrorMessage name=\"name\" component=\"div\" />\n        </Label>\n        <Label>\n          Number\n          <br />\n          <Field type=\"phone\" name=\"phone\" />\n          <ErrorMessage name=\"phone\" component=\"div\" />\n        </Label>\n        <Btn type=\"submit\">Add contact</Btn>\n      </Form>\n    </Formik>\n  );\n};\n\nContactForm.propTypes = {\n  onSave: PropTypes.func.isRequired,\n};\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n  width: 400px;\n  list-style: none;\n  padding: 0;\n`;\n\nexport const ListItem = styled.li`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 10px;\n  background-color: #039be5;\n  /* outline: 1px solid gray; */\n  border-radius: 12px;\n`;\n\nexport const Btn = styled.button`\n  height: 40px;\n  padding: 5px 10px;\n  background-color: yellow;\n  border-radius: 12px;\n`;\n\nexport const ContactName = styled.p`\n  color: white;\n  font-weight: 500;\n`;\n\nexport const ContactPhone = styled.p`\n  color: white;\n  font-weight: 500;\n`;\n","import {\n  List,\n  ListItem,\n  Btn,\n  ContactName,\n  ContactPhone,\n} from './ContactList.styled';\nimport PropTypes from 'prop-types';\n\nexport const ContactList = ({ contacts, onDelete }) => {\n  return (\n    <List>\n      {contacts.map(contact => {\n        return (\n          <ListItem key={contact.id}>\n            <ContactName>{contact.name}:</ContactName>\n            <ContactPhone>{contact.phone}</ContactPhone>\n            <Btn type=\"button\" onClick={() => onDelete(contact.id)}>\n              Delete\n            </Btn>\n          </ListItem>\n        );\n      })}\n    </List>\n  );\n};\n\nContactList.propTypes = {\n  contacts: PropTypes.array.isRequired,\n  onDelete: PropTypes.func.isRequired,\n};\n","import styled from 'styled-components';\n\nexport const Input = styled.input`\n  box-sizing: border-box;\n  display: block;\n  margin-top: 5px;\n  margin-left: auto;\n  margin-right: auto;\n  padding: 5px 20px;\n  font-size: 20px;\n  line-height: 1.5;\n  width: 60%;\n  /* height: 40px; */\n  border-radius: 12px;\n  background-color: yellow;\n`;\n\nexport const Label = styled.label`\n  display: inline-block;\n\n  text-align: center;\n  width: 100%;\n  font-size: 16px;\n`;\n","import PropTypes from 'prop-types';\nimport { Input, Label } from './Filter.styled';\n\nexport const Filter = ({ handleInputChange, filter }) => {\n  return (\n    <Label>\n      Sort contacts by Name:\n      <br />\n      <Input\n        value={filter}\n        type=\"text\"\n        name=\"filter\"\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        required\n        onChange={handleInputChange}\n      />\n    </Label>\n  );\n};\n\nFilter.propTypes = {\n  handleInputChange: PropTypes.func.isRequired,\n  filter: PropTypes.string.isRequired,\n};\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  margin-left: auto;\n  margin-right: auto;\n  width: 400px;\n`;\n\nexport const MainTitle = styled.h1`\n  text-align: center;\n`;\n\nexport const Title = styled.h2`\n  margin-top: 40px;\n  text-align: center;\n`;\n\nexport const TextError = styled.p`\n  text-align: center;\n`;\n","import { ThreeDots } from 'react-loader-spinner';\n\nexport const Loader = () => {\n  return (\n    <ThreeDots\n      height=\"80\"\n      width=\"80\"\n      radius=\"9\"\n      color=\"#4fa94d\"\n      ariaLabel=\"three-dots-loading\"\n      wrapperStyle={{ justifyContent: 'center' }}\n      wrapperClassName=\"loader\"\n      visible={true}\n    />\n  );\n};\n","import { useEffect } from 'react';\nimport { ContactForm } from 'components/ContactForm/ContactForm';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { Filter } from 'components/Filter/Filter';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  selectContacts,\n  selectIsLoading,\n  selectError,\n} from 'redux/contact/contactSlice';\nimport { setFilter, getFilter } from 'redux/contact/filterSlice';\nimport {\n  fetchContacts,\n  addContact,\n  deleteContact,\n} from 'redux/contact/contactsOperations';\nimport { Wrapper, MainTitle, Title, TextError } from '../components/App.styled';\nimport { Loader } from 'components/Loader/Loader';\n\nconst Contacts = () => {\n  const contacts = useSelector(selectContacts);\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n  const filter = useSelector(getFilter);\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const handleInputChange = evt => {\n    dispatch(setFilter(evt.currentTarget.value));\n  };\n\n  const filteredArr = () => {\n    const filteredContacts = contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n    );\n    return filteredContacts;\n  };\n\n  const doDeleteContact = id => {\n    dispatch(deleteContact(id));\n  };\n\n  const doAddContact = newContact => {\n    if (\n      contacts.some(\n        contact => contact.name.toLowerCase() === newContact.name.toLowerCase()\n      )\n    ) {\n      alert(`${newContact.name} is already in contacts`);\n    } else {\n      dispatch(addContact(newContact));\n    }\n  };\n  return (\n    <Wrapper>\n      <MainTitle>Phonebook</MainTitle>\n      <ContactForm onSave={doAddContact} />\n      <Title>Contacts</Title>\n      <Filter filter={filter} handleInputChange={handleInputChange}></Filter>\n      {isLoading && <Loader />}\n      {error && <TextError>Oops, something wrong is going on...</TextError>}\n      <ContactList\n        contacts={filteredArr()}\n        onDelete={doDeleteContact}\n      ></ContactList>\n    </Wrapper>\n  );\n};\n\nexport default Contacts;\n"],"names":["ErrorMessage","styled","FormikErrorMessage","Form","FormikForm","Label","Field","FormikInput","Btn","FormSchema","Yup","shape","name","required","phone","positive","ContactForm","onSave","initialValues","validationSchema","onSubmit","values","actions","id","nanoid","resetForm","component","type","List","ListItem","ContactName","ContactPhone","ContactList","contacts","onDelete","map","contact","onClick","Input","Filter","handleInputChange","filter","value","pattern","title","onChange","Wrapper","MainTitle","Title","TextError","Loader","height","width","radius","color","ariaLabel","wrapperStyle","justifyContent","wrapperClassName","visible","useSelector","selectContacts","isLoading","selectIsLoading","error","selectError","getFilter","dispatch","useDispatch","useEffect","fetchContacts","newContact","some","toLowerCase","alert","addContact","evt","setFilter","currentTarget","includes","deleteContact"],"sourceRoot":""}