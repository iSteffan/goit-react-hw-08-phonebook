{"version":3,"file":"static/js/283.ca6d0385.chunk.js","mappings":"yNAEaA,EAAYC,EAAAA,GAAAA,GAAH,6DAKTC,EAAUD,EAAAA,GAAAA,IAAH,mN,yLCKhBE,EAAiB,CACnBC,WAAY,CACV,uCAAwC,CAAEC,gBAAiB,GAC3D,6CAA8C,CAAEC,aAAc,GAC9D,uCAAwC,CAAEC,kBAAmB,IAE/DC,SAAU,CACR,uCAAwC,CAAEC,mBAAoB,GAC9D,6CAA8C,CAAEH,aAAc,GAC9D,uCAAwC,CAAEI,gBAAiB,KAG3DC,EAAY,CACdP,WAAY,SAACQ,GAAD,MAAc,CACxB,kCAAmC,CAAEC,YAAaD,GADxC,EAGZJ,SAAU,SAACI,GAAD,MAAc,CACtB,kCAAmC,CAAEE,UAAWF,GADxC,GAIRG,GAAcC,EAAAA,EAAAA,IAChB,SAAsBC,EAAOC,GAC3B,IACEC,EASEF,EATFE,KACAC,EAQEH,EARFG,YACAC,EAOEJ,EAPFI,QACAC,EAMEL,EANFK,UAJF,EAUIL,EALFL,QAAAA,OALF,MAKY,SALZ,EAMEW,EAIEN,EAJFM,WACAC,EAGEP,EAHFO,WAPF,EAUIP,EAFFQ,YAAAA,OARF,MAQgB,aARhB,EASKC,GATL,OAUIT,EAVJ,GAWMU,GAAaC,EAAAA,EAAAA,IAAG,uBAAwBN,GACxCO,GAAUC,EAAAA,EAAAA,UACd,iBAAO,CAAEX,KAAAA,EAAMC,YAAAA,EAAaC,QAAAA,EAASG,WAAAA,EAArC,GACA,CAACL,EAAMC,EAAaC,EAASG,IAE3BO,GAAc,QAChBC,QAAS,eACNT,EAAapB,EAAesB,GAAed,EAAUc,GAAab,IAEjEqB,EAA6B,aAAhBR,EACnB,OAAuBS,EAAAA,EAAAA,KAAIC,EAAAA,EAAqB,CAAEC,MAAOP,EAASQ,UAA0BH,EAAAA,EAAAA,KAC1FI,EAAAA,EAAAA,KAD6F,QAG3FpB,IAAAA,EACAqB,KAAM,QACNC,MAAOT,EACPT,UAAWK,EACX,gBAAiBJ,EAAa,QAAK,EACnC,mBAAoBE,EACpBgB,QAASR,EAAa,cAAW,GAC9BP,KAGR,IAEHX,EAAY2B,YAAc,c,4CCZ1B,EAlDa,WACX,IAAMC,GAAWC,EAAAA,EAAAA,MACTC,GAASC,EAAAA,EAAAA,KAATD,KAUR,OACE,+BACE,SAAC3C,EAAD,UACG2C,EAAKE,MACJ,iCACE,SAAC,cAAD,CAAsBX,MAAO,CAAEY,MAAO,QAAS7B,KAAM,OAArD,UACE,SAAC,MAAD,OAEF,UAACnB,EAAD,sBAAoB6C,EAAKE,YAG3B,iCACE,SAAC/C,EAAD,2DACA,UAACe,EAAD,CAAaH,QAAQ,IAArB,WACE,SAAC,IAAD,CACEQ,YAAY,OACZD,KAAK,KACL8B,UAAU,SAAC,MAAD,IACVC,QA1BG,WACfP,EAAS,YACV,EAoBW,sBAQA,SAAC,IAAD,CACEvB,YAAY,OACZD,KAAK,KACL8B,UAAU,SAAC,MAAD,IACVC,QA9BE,WACdP,EAAS,SACV,EAwBW,6BAcb,C","sources":["pages/Home.styled.js","../node_modules/@chakra-ui/button/dist/chunk-PEYICJIL.mjs","pages/Home.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Greetings = styled.h1`\n  color: white;\n  font-size: 24px;\n`;\n\nexport const Wrapper = styled.div`\n  margin-top: 100px;\n  margin-left: auto;\n  margin-right: auto;\n  padding: 20px;\n  width: 400px;\n  background-color: rgb(40 113 171);\n  border-radius: 12px;\n  /* opacity: 0.5; */\n`;\n","import {\n  ButtonGroupProvider\n} from \"./chunk-DGWZA2DU.mjs\";\n\n// src/button-group.tsx\nimport {\n  chakra,\n  forwardRef\n} from \"@chakra-ui/system\";\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport { useMemo } from \"react\";\nimport { jsx } from \"react/jsx-runtime\";\nvar attachedStyles = {\n  horizontal: {\n    \"> *:first-of-type:not(:last-of-type)\": { borderEndRadius: 0 },\n    \"> *:not(:first-of-type):not(:last-of-type)\": { borderRadius: 0 },\n    \"> *:not(:first-of-type):last-of-type\": { borderStartRadius: 0 }\n  },\n  vertical: {\n    \"> *:first-of-type:not(:last-of-type)\": { borderBottomRadius: 0 },\n    \"> *:not(:first-of-type):not(:last-of-type)\": { borderRadius: 0 },\n    \"> *:not(:first-of-type):last-of-type\": { borderTopRadius: 0 }\n  }\n};\nvar gapStyles = {\n  horizontal: (spacing) => ({\n    \"& > *:not(style) ~ *:not(style)\": { marginStart: spacing }\n  }),\n  vertical: (spacing) => ({\n    \"& > *:not(style) ~ *:not(style)\": { marginTop: spacing }\n  })\n};\nvar ButtonGroup = forwardRef(\n  function ButtonGroup2(props, ref) {\n    const {\n      size,\n      colorScheme,\n      variant,\n      className,\n      spacing = \"0.5rem\",\n      isAttached,\n      isDisabled,\n      orientation = \"horizontal\",\n      ...rest\n    } = props;\n    const _className = cx(\"chakra-button__group\", className);\n    const context = useMemo(\n      () => ({ size, colorScheme, variant, isDisabled }),\n      [size, colorScheme, variant, isDisabled]\n    );\n    let groupStyles = {\n      display: \"inline-flex\",\n      ...isAttached ? attachedStyles[orientation] : gapStyles[orientation](spacing)\n    };\n    const isVertical = orientation === \"vertical\";\n    return /* @__PURE__ */ jsx(ButtonGroupProvider, { value: context, children: /* @__PURE__ */ jsx(\n      chakra.div,\n      {\n        ref,\n        role: \"group\",\n        __css: groupStyles,\n        className: _className,\n        \"data-attached\": isAttached ? \"\" : void 0,\n        \"data-orientation\": orientation,\n        flexDir: isVertical ? \"column\" : void 0,\n        ...rest\n      }\n    ) });\n  }\n);\nButtonGroup.displayName = \"ButtonGroup\";\n\nexport {\n  ButtonGroup\n};\n","import { useNavigate } from 'react-router-dom';\nimport { Wrapper, Greetings } from './Home.styled';\nimport { useAuth } from 'hooks';\nimport { Button, ButtonGroup } from '@chakra-ui/react';\nimport { SlLogin, SlPencil } from 'react-icons/sl';\nimport { FaUserCircle } from 'react-icons/fa';\nimport { IconContext } from 'react-icons';\n\nconst Home = () => {\n  const navigate = useNavigate();\n  const { user } = useAuth();\n\n  const onSignUp = () => {\n    navigate('/register');\n  };\n\n  const onLogIn = () => {\n    navigate('/login');\n  };\n\n  return (\n    <>\n      <Wrapper>\n        {user.name ? (\n          <>\n            <IconContext.Provider value={{ color: 'white', size: '3em' }}>\n              <FaUserCircle />\n            </IconContext.Provider>\n            <Greetings>Welcome {user.name}</Greetings>\n          </>\n        ) : (\n          <>\n            <Greetings>Welcome dear user, please sign up or log in</Greetings>\n            <ButtonGroup spacing=\"6\">\n              <Button\n                colorScheme=\"blue\"\n                size=\"md\"\n                leftIcon={<SlPencil />}\n                onClick={onSignUp}\n              >\n                Sign up\n              </Button>\n              <Button\n                colorScheme=\"blue\"\n                size=\"md\"\n                leftIcon={<SlLogin />}\n                onClick={onLogIn}\n              >\n                Log in\n              </Button>\n            </ButtonGroup>\n          </>\n        )}\n      </Wrapper>\n    </>\n  );\n};\n\nexport default Home;\n"],"names":["Greetings","styled","Wrapper","attachedStyles","horizontal","borderEndRadius","borderRadius","borderStartRadius","vertical","borderBottomRadius","borderTopRadius","gapStyles","spacing","marginStart","marginTop","ButtonGroup","forwardRef","props","ref","size","colorScheme","variant","className","isAttached","isDisabled","orientation","rest","_className","cx","context","useMemo","groupStyles","display","isVertical","jsx","ButtonGroupProvider","value","children","chakra","role","__css","flexDir","displayName","navigate","useNavigate","user","useAuth","name","color","leftIcon","onClick"],"sourceRoot":""}